(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{134:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",(function(){return i})),n.d(a,"metadata",(function(){return c})),n.d(a,"toc",(function(){return l})),n.d(a,"default",(function(){return s}));var t=n(3),r=n(8),o=(n(0),n(266)),i={title:"Hydra Ray Launcher",author:"Jieru Hu",author_url:"https://github.com/jieru-hu",author_image_url:"https://graph.facebook.com/733244046/picture/?height=200&width=200",tags:["Hydra","Ray","Plugin"],image:"https://hydra.cc/img/Hydra-Readme-logo2.svg"},c={permalink:"/blog/2020/12/22/Hydra_Ray_Launcher",source:"@site/blog/2020-12-22-Hydra_Ray_Launcher.md",description:"We are happy to announce that we are adding a Ray Launcher to the Hydra Launchers family.",date:"2020-12-22T00:00:00.000Z",formattedDate:"December 22, 2020",tags:[{label:"Hydra",permalink:"/blog/tags/hydra"},{label:"Ray",permalink:"/blog/tags/ray"},{label:"Plugin",permalink:"/blog/tags/plugin"}],title:"Hydra Ray Launcher",readingTime:3.465,truncated:!0,nextItem:{title:"Hydra 1.0",permalink:"/blog/2020/09/03/Hydra_1.0"}},l=[{value:"Launching to a new or existing AWS cluster",id:"launching-to-a-new-or-existing-aws-cluster",children:[]},{value:"Launching to a new local Ray Cluster",id:"launching-to-a-new-local-ray-cluster",children:[]},{value:"Launching to an existing local Ray Cluster",id:"launching-to-an-existing-local-ray-cluster",children:[]},{value:"Parameter sweeps and optimization",id:"parameter-sweeps-and-optimization",children:[]},{value:"Config type safety",id:"config-type-safety",children:[]}],u={toc:l};function s(e){var a=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},u,n,{components:a,mdxType:"MDXLayout"}),Object(o.b)("p",null,"We are happy to announce that we are adding a ",Object(o.b)("a",{parentName:"p",href:"https://hydra.cc/docs/plugins/ray_launcher"},"Ray Launcher")," to the Hydra Launchers family.\nHydra's Launcher plugins enable launching to different environments without changing your existing workflows or application code.\nThe Hydra Ray Launcher can be used to launch your application to a new or existing ",Object(o.b)("a",{parentName:"p",href:"https://docs.ray.io/en/master/cluster/launcher.html"},"Ray cluster"),",\nlocally or on AWS. In this post we demonstrate the major functionalities of the Launcher.\nFor more details on installation and configuration, please check out the ",Object(o.b)("a",{parentName:"p",href:"https://hydra.cc/docs/plugins/ray_launcher/"},"Hydra Ray Launcher documentation"),".\nAs always, please ",Object(o.b)("a",{parentName:"p",href:"https://github.com/facebookresearch/hydra#community"},"join our community")," and give us feedback!"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://github.com/ray-project/ray"},"Ray")," is a simple yet powerful Python library for parallel and distributed programming. Among the many features it provides, Ray comes with a\n",Object(o.b)("a",{parentName:"p",href:"https://docs.ray.io/en/master/cluster/launcher.html#ref-automatic-cluster"},"cluster launcher")," that can be used to provision resources and start a Ray cluster on top of them.\nHydra Ray Launcher is built on top of the ",Object(o.b)("a",{parentName:"p",href:"https://docs.ray.io/en/master/ray-overview/index.html#parallelizing-python-java-functions-with-ray-tasks"},"Ray Tasks API")," and the Ray cluster launcher. "),Object(o.b)("h3",{id:"launching-to-a-new-or-existing-aws-cluster"},"Launching to a new or existing AWS cluster"),Object(o.b)("p",null,"Hydra Ray Launcher simplifies your experience by allowing the Ray cluster setup to be\nconfigured transparently by Hydra (eliminating the need for an external YAML file while maintaining\nthe flexibility). Hydra Ray Launcher comes with reasonable default configurations which can be found\n",Object(o.b)("a",{parentName:"p",href:"https://hydra.cc/docs/plugins/ray_launcher/#ray_aws-launcher"},"here")," (under the heading, \u201cDiscover ray_aws launcher's config\u201d). You can override them in your application\nconfig or from the command line to fit your use case.\nThe following Ray Launcher example code (e.g., my_app.py) is runnable and can be found ",Object(o.b)("a",{parentName:"p",href:"https://github.com/facebookresearch/hydra/tree/master/plugins/hydra_ray_launcher/examples/simple"},"here"),". "),Object(o.b)("p",null,"Launch your Hydra application to AWS by simply overriding: ",Object(o.b)("inlineCode",{parentName:"p"},"hydra/launcher=ray_aws"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-commandline"},"$ python my_app.py hydra/launcher=ray_aws task=1,2 --multirun\n[HYDRA] Ray Launcher is launching 2 jobs, \n[HYDRA]        #0 : task=1\n[HYDRA]        #1 : task=2\n...\n[HYDRA] Running command: ['ray', 'up', '-y', '/var/folders/n_/9qzct77j68j6n9lh0lw3vjqcn96zxl/T/tmp20qvoy15.yaml']\n[HYDRA] Output: INFO services.py:1090 -- View the Ray dashboard at http://127.0.0.1:8265\n(pid=3823)[__main__][INFO] - Executing task 1\n(pid=3822)[__main__][INFO] - Executing task 2\n[HYDRA] Stopping cluster now. (stop_cluster=true)\n[HYDRA] Deleted the cluster (provider.cache_stopped_nodes=false)\n[HYDRA] Running command: ['ray', 'down', '-y', '/var/folders/n_/9qzct77j68j6n9lh0lw3vjqcn96zxl/T/tmpfm2ems9v.yaml']\n")),Object(o.b)("h3",{id:"launching-to-a-new-local-ray-cluster"},"Launching to a new local Ray Cluster"),Object(o.b)("p",null,"If you want to do a quick local test,\nyou can spin up a local Ray cluster at application run time by specifying ",Object(o.b)("inlineCode",{parentName:"p"},"hydra/launcher=ray"),".\nIn this example, we create a new Ray cluster at application time. "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-commandline"},"$ python my_app.py  --multirun hydra/launcher=ray \n[HYDRA] Ray Launcher is launching 1 jobs, sweep output dir: multirun/2020-12-17/16-11-28\n[HYDRA] Initializing ray with config: {'address': None}\n2020-12-17 16:11:29,340 INFO services.py:1090 -- View the Ray dashboard at http://127.0.0.1:8265\n[HYDRA]        #0 : \n(pid=62642) [__main__][INFO] - Executing task 1\n")),Object(o.b)("h3",{id:"launching-to-an-existing-local-ray-cluster"},"Launching to an existing local Ray Cluster"),Object(o.b)("p",null,"You can launch the application on an existing local Ray cluster by configuring the cluster address\nand overriding ",Object(o.b)("inlineCode",{parentName:"p"},"hydra/launcher=ray"),". In the following example we configure the Ray cluster address\nto local ray cluster and Hydra Ray Launcher was able to connect to the existing Ray cluster and\nexecute the application code:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-commandline"},"$ python my_app.py  --multirun hydra/launcher=ray hydra.launcher.ray.init.address=localhost:6379\n[HYDRA] Ray Launcher is launching 1 jobs, sweep output dir: multirun/2020-11-10/15-13-32\n[HYDRA] Initializing ray with config: {'num_cpus': None, 'num_gpus': None, 'address': 'localhost:6379'}\nINFO worker.py:633 -- Connecting to existing Ray cluster at address: 10.30.99.17:6379\n[HYDRA]        #0 :\n(pid=93358) [__main__][INFO] - Executing task 1\n")),Object(o.b)("p",null,"Hydra Ray Launcher is built on top of Hydra 1.0 and you have access to all of the benefits Hydra brings:"),Object(o.b)("h3",{id:"parameter-sweeps-and-optimization"},"Parameter sweeps and optimization"),Object(o.b)("p",null,"Hyperparameter sweeps are common in machine learning research.\nHydra has built-in grid search and provides several Sweeper plugins for hyperparameter optimization.\nSweepers can be used together with Launchers for sweeping on different computing platforms.\nStart from our documentation ",Object(o.b)("a",{parentName:"p",href:"https://hydra.cc/docs/tutorials/basic/running_your_app/multi-run/"},"here")," to find more."),Object(o.b)("h3",{id:"config-type-safety"},"Config type safety"),Object(o.b)("p",null,"Modern Hydra applications and Hydra Plugins leverage Structured Configs for config validation,\nand Hydra Ray Launcher is no exception. In the following example, we try to override the Ray cluster\u2019s\nautoscaling mode with an illegal value:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-commandline"},"$ python my_app.py --multirun hydra.launcher.ray.cluster.autoscaling_mode=foo\nError merging override hydra.launcher.ray.cluster.autoscaling_mode=foo\nInvalid value 'foo', expected one of [default, aggressive]\n        full_key: hydra.launcher.ray.cluster.autoscaling_mode\n        reference_type=RayClusterConf\n        object_type=RayClusterConf\n\nSet the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.\n")),Object(o.b)("p",null,"That\u2019s it for now! Please try out the new Hydra Ray Launcher and let us know what you think.\nWe are always happy to connect with you via ",Object(o.b)("a",{parentName:"p",href:"https://github.com/facebookresearch/hydra"},"GitHub")," or the ",Object(o.b)("a",{parentName:"p",href:"https://hydra-framework.zulipchat.com/"},"Hydra Chat"),"."))}s.isMDXComponent=!0},266:function(e,a,n){"use strict";n.d(a,"a",(function(){return p})),n.d(a,"b",(function(){return d}));var t=n(0),r=n.n(t);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=r.a.createContext({}),s=function(e){var a=r.a.useContext(u),n=a;return e&&(n="function"==typeof e?e(a):c(c({},a),e)),n},p=function(e){var a=s(e.components);return r.a.createElement(u.Provider,{value:a},e.children)},h={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},y=r.a.forwardRef((function(e,a){var n=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),y=t,d=p["".concat(i,".").concat(y)]||p[y]||h[y]||o;return n?r.a.createElement(d,c(c({ref:a},u),{},{components:n})):r.a.createElement(d,c({ref:a},u))}));function d(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=n.length,i=new Array(o);i[0]=y;var c={};for(var l in a)hasOwnProperty.call(a,l)&&(c[l]=a[l]);c.originalType=e,c.mdxType="string"==typeof e?e:t,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}y.displayName="MDXCreateElement"}}]);